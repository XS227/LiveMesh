name: Deploy LiveMesh
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -euo pipefail
            echo "🚀 Deploying LiveMesh on $HOSTNAME"

            # --- Config ---
            DEPLOY_PATH="${DEPLOY_PATH:-/var/www/livemesh/app}"
            export DOCKER_CONFIG="${DEPLOY_PATH}/.docker"   # project-local builder state
            mkdir -p "$DOCKER_CONFIG"

            # --- Code sync ---
            if [ -d "$DEPLOY_PATH/.git" ]; then
              echo "📥 Pulling latest..."
              cd "$DEPLOY_PATH"
              git fetch origin main
              git reset --hard origin/main
            else
              echo "🆕 Fresh clone..."
              sudo mkdir -p "$(dirname "$DEPLOY_PATH")"
              sudo chown -R $USER:$USER "$(dirname "$DEPLOY_PATH")"
              rm -rf "$DEPLOY_PATH"
              git clone https://github.com/XS227/LiveMesh "$DEPLOY_PATH"
              cd "$DEPLOY_PATH"
            fi

            # --- Build & run ---
            echo "🐳 Rebuild & start containers..."
            # simplest/most compatible: disable BuildKit to avoid buildx perms
            COMPOSE_DOCKER_CLI_BUILD=0 DOCKER_BUILDKIT=0 docker compose down --remove-orphans || true
            COMPOSE_DOCKER_CLI_BUILD=0 DOCKER_BUILDKIT=0 docker compose up -d --build

            echo "⏳ Waiting for server to boot..."
            sleep 5

            echo "🔎 Health check (container port 3000)..."
            if ! curl -fsS http://127.0.0.1:3000/ >/dev/null; then
              echo "❌ App unhealthy on 127.0.0.1:3000"
              docker compose logs --no-color web | tail -n 200 || true
              exit 1
            fi

            echo "🔎 Health check (Nginx public host)..."
            if ! curl -fsSI http://livemesh1.setaei.com/ | head -n 1 | grep -q '200\|301\|302'; then
              echo "❌ Nginx/front-door not serving OK status"
              exit 1
            fi

            echo "✅ Deployment complete"
