name: Deploy LiveMesh to production server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -euo pipefail
            echo "üöÄ Starting deployment on $HOSTNAME"

            # --- Config (edit if needed) ---
            export HOME="/home/${{ secrets.SERVER_USER }}"
            DEPLOY_PATH="${DEPLOY_PATH:-/var/www/livemesh/app}"
            PARENT_DIR="$(dirname "$DEPLOY_PATH")"
            DOMAIN="livemesh1.setaei.com"

            # Use project-local docker config to avoid ~/.docker perms/buildx issues
            export DOCKER_CONFIG="${DEPLOY_PATH}/.docker"
            mkdir -p "$DOCKER_CONFIG"

            # --- Ensure path exists and is owned by deploy user ---
            sudo mkdir -p "$PARENT_DIR"
            sudo chown -R "${USER}:${USER}" "$PARENT_DIR"
            mkdir -p "$DEPLOY_PATH"

            # --- Git safety & code sync ---
            git config --global --add safe.directory "$DEPLOY_PATH"
            if [ -d "$DEPLOY_PATH/.git" ]; then
              echo "üì• Pulling latest code..."
              cd "$DEPLOY_PATH"
              git fetch origin main
              git reset --hard origin/main
            else
              echo "üÜï Fresh clone..."
              rm -rf "$DEPLOY_PATH"
              git clone https://github.com/XS227/LiveMesh "$DEPLOY_PATH"
              cd "$DEPLOY_PATH"
            fi

            echo "üê≥ Rebuilding Docker containers..."
            # Disable BuildKit to dodge buildx ownership edge cases
            COMPOSE_DOCKER_CLI_BUILD=0 DOCKER_BUILDKIT=0 docker compose down --remove-orphans || true
            COMPOSE_DOCKER_CLI_BUILD=0 DOCKER_BUILDKIT=0 docker compose up -d --build

            echo "‚è≥ Waiting for app to boot..."
            sleep 6

            echo "üîé Health check (container on 127.0.0.1:3000)..."
            if ! curl -fsS http://127.0.0.1:3000/ >/dev/null; then
              echo "‚ùå App unhealthy on 127.0.0.1:3000"
              docker compose logs --no-color web | tail -n 200 || true
              exit 1
            fi

            echo "üîé Health check (public via Nginx)..."
            if ! curl -fsSI "http://${DOMAIN}/" | head -n 1 | grep -q '200\|301\|302'; then
              echo "‚ùå Front door (Nginx) not serving expected status for ${DOMAIN}"
              exit 1
            fi

            echo "‚úÖ Deployment complete!"
